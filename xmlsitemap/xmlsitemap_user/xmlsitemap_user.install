<?php
// $Id: xmlsitemap_user.install,v 1.6.2.57 2009/05/25 18:32:51 kiam Exp $

/**
 * @file
 * Installation file for XML sitemap user.
 */

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_user_enable() {
  xmlsitemap_flag_sitemap(TRUE);
}

/**
 * Implementation of hook_disable().
 */
function xmlsitemap_user_disable() {
  xmlsitemap_flag_sitemap(TRUE);
}

/**
 * Implementation of hook_schema().
 */
function xmlsitemap_user_schema() {
  $schema['xmlsitemap_user'] = array(
    'description' => 'The list of the links added to the sitemap.',
    'fields' => array(
      'mid' => array(
        'description' => 'The primary key.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'pdata' => array(
        'description' => 'The user ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether or not this link is enabled.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
      ),
      'previously_changed' => array(
        'description' => 'The Unix timestamp of the previous change.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp of the last change.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'priority' => array(
        'description' => 'The priority of the link in the sitemap.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0.5,
      ),
      'priority_override' => array(
        'description' => 'The value that override the normal priority.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => -2.0,
      ),
    ),
    'indexes' => array(
      'link_status' => array('status'),
      'link_changed' => array('changed'),
      'link_priority' => array('priority'),
    ),
    'unique keys' => array(
      'link_pdata' => array('pdata'),
    ),
    'primary key' => array('mid'),
  );
  $schema['xmlsitemap_user_role'] = array(
    'description' => 'The user roles settings table.',
    'fields' => array(
      'rid' => array(
        'description' => 'The role ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'priority' => array(
        'description' => 'The priority assigned to the role.',
        'type' => 'float',
        'not null' => TRUE,
        'default' => 0.5,
      ),
    ),
    'primary key' => array('rid'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_user_install() {
  drupal_install_schema('xmlsitemap_user');
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'xmlsitemap_user'");
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_user_update_6000() {
  $ret = array();
  $schema = xmlsitemap_user_schema();
  if (db_table_exists('xmlsitemap_user')) {
    db_drop_table($ret, 'xmlsitemap_user');
  }
  foreach(xmlsitemap_user_schema() as $table => $definition) {
    if (db_table_exists($table)) {
      $result = array();
      @db_drop_primary_key($result, $table);
      if ($result[0]['success']) {
        $ret[] = $result[0];
      }
      if (isset($definition['unique keys'])) {
        foreach ($definition['unique keys'] as $key => $info) {
          $result = array();
          @db_drop_unique_key($result, $table, $key);
          if ($result[0]['success']) {
            $ret[] = $result[0];
          }
        }
      }
      if (isset($definition['indexes'])) {
        foreach ($definition['indexes'] as $key => $info) {
          $result = array();
          @db_drop_index($result, $table, $key);
          if ($result[0]['success']) {
            $ret[] = $result[0];
          }
        }
      }
      foreach ($definition['fields'] as $field => $info) {
        if (db_column_exists($table, $field)) {
          db_change_field($ret, $table, $field, $field, $info);
        }
        else {
          db_add_field($ret, $table, $field, $info);
        }
      }
      if (isset($definition['primary key'])) {
        $result = array();
        @db_add_primary_key($result, $table, $definition['primary key']);
        if ($result[0]['success']) {
          $ret[] = $result[0];
        }
      }
      if (isset($definition['unique keys'])) {
        foreach ($definition['unique keys'] as $key => $info) {
          $result = array();
          @db_add_unique_key($result, $table, $key, $info);
          if ($result[0]['success']) {
            $ret[] = $result[0];
          }
        }
      }
      if (isset($definition['indexes'])) {
        foreach ($definition['indexes'] as $key => $info) {
          $result = array();
          @db_add_index($result, $table, $key, $info);
          if ($result[0]['success']) {
            $ret[] = $result[0];
          }
        }
      }
    }
    else {
      db_create_table($ret, $table, $definition);
    }
  }
  return $ret;
}

/**
 * Implementation of hook_update_N().
 *
 */
function xmlsitemap_user_update_6113() {
  $ret[] = update_sql("UPDATE {system} SET weight = 10 WHERE name = 'xmlsitemap_user'");
  return $ret;
}

/**
 * Implementation of hook_update_N().
 *
 */
function xmlsitemap_user_update_6116() {
  return xmlsitemap_user_update_6000();
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_user_uninstall() {
  drupal_uninstall_schema('xmlsitemap_user');
}
